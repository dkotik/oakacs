import (
	"context"
	"errors"

	"github.com/tigerperformanceinstitute/tprograms/oakacs"
)

func AllowOrDenyName(ctx context.Context, i *oakacs.Intent) (err error) {

	// exact match
	if MatchResourcePath != i.ResourcePath {
		return nil
	}

	// check if resouce path is dynamic

	// iterate through MatchAction
	if MatchAction != i.Action {
		return nil
	}

	for _, def := range []PredicateDefinition{
		// AndPredicates
	} {
		if err = i.Predicates.Must(ctx, def.Property, def.DesiredValues...); err != nil && !errors.Is(err, oakacs.Allow) {
			return err // break on first error
		}
	}

	for _, def := range []PredicateDefinition{
		// OrPredicates
	} {
		if err = i.Predicates.Must(ctx, def.Property, def.DesiredValues...); err != nil {
			if errors.Is(err, oakacs.Allow) {
				return err // break on first success
			}
			return err // break on error
		}
	}

	// if DenyOnMatch is set
	return Deny
	// else
	return nil
}
